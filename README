Due date: Sunday 2/7/2016 @ 11:59pm

- Please remember to answer the questions in REPORT.txt

Objective:
~~~~~~~~~~

- Become familiar with x86-64 assembly

Assignment:
~~~~~~~~~~~

(1) Answer the questions in REPORT.txt

(2) Finish the implementation of a compiler for the language from p2

     The compiler reads a p3 file from stdin and produces the equivalent
     x86-64 assembly program in stdout.

Hints:
~~~~~~

- Try to translate a few examples by hand then start to implement your compiler

- Read about getchar (man getchar)

- First 6 integral arguments are passed in %rdi, %rsi, %rdx, %rcx, %r8, %r9

- Return value in %rax

- Stack pointer (%rsp) has to be divisble by 16 before calling a function

- Functions should preserve %rbx, %rsp, %rbp, %r12, %r13, %r14, %r15

Example:
~~~~~~~~

Let's say the file tx.test contains

    x = 100
    y = 200
    z = x + y

You can compile it (once you've finished p3) as follows 

    ./p3 < tx.test > tx.S

or by using the Makefile

    make tx.S

The contents of tx.S (produced by your program) will be something like

    .global main
main:
    // code that produces the effects of tx.test as defined in p2
    mov $0,%rax
    ret

You can now produce an executable from tx.S by

    gcc -o tx tx.S

Or by using the Makefile

    make tx

You can run tx by hand

    ./tx

And it should produce the output

    x:100
    y:200
    z:300

Files
~~~~~

p3.c      The compiler source (to be completed by you)
p3        The compiler executable (generated by "make p3")

For each test "tx"

tx.test   the source program
tx.S      the equivalent x86-64 assembly program (generated by p3)
tx        the compiled program (generated by the Makefile)
tx.out    output produced by running tx
tx.ok     the expected output
tx.diff   the difference between tx.out tx.ok

Make targets:
~~~~~~~~~~~~~

make           # compile the compiler
make tx.S      # run the compiler on tx.test and produce the x86-64 assembly
make tx        # run the compiler on tx.test and produce the x86-64 executable
make tx.out    # run the compiled program and produce its output
make tx.diff   # produce the difference between tx.out and tx.ok
make tx.result # produce a summary of the result of running tx

make progs     # compile all the tests
make outs      # produce all the out files
make diffs     # produce all the diff files
make test      # produce summary output for all tests

Files you're allowed to change:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   p3.c

You can also add your own tests by creating a pair of
files (for example tz.test and tx.ok)

To debug with gdb
~~~~~~~~~~~~~~~~~

    make
    gdb ./p3
    (gdb) run
    <<type your program>>
    <<terminate programing with ^D (pressing control and D together)

or

    gdb ./p3
    (gdb) run < t5.test
